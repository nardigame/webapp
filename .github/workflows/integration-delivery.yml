name: integration-delivery

on:
  push:

  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: nardi-webapp

jobs:
  integration:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: up
        run: |
          docker-compose up
          docker-compose run nardi-webapp npm ci

      - name: lint
        run: docker-compose run nardi-webapp npm run lint

      - name: build
        run: docker-compose run nardi-webapp npm run build

      - name: e2e
        run: |
          docker-compose run nardi-webapp npx serve ./build &
          docker-compose run nardi-webapp npm run e2e

  delivery:
    needs: integration

    runs-on: ubuntu-20.04

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: build
        run: |
          docker-compose up
          docker-compose run nardi-webapp npm ci
          docker-compose run nardi-webapp npm run build

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
